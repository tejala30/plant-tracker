# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: QueryType
    mutation: MutationType
}

type MutationType {
    createAccount(input: Input_com_github_ptracker_service_AccountCreateRequest): com_github_ptracker_entity_Account
    createFertilizationEvent(input: Input_com_github_ptracker_service_FertilizationEventCreateRequest): com_github_ptracker_entity_FertilizationEvent
    createGarden(input: Input_com_github_ptracker_service_GardenCreateRequest): com_github_ptracker_entity_Garden
    createGardenPlant(input: Input_com_github_ptracker_service_GardenPlantCreateRequest): com_github_ptracker_entity_GardenPlant
    createGardener(input: Input_com_github_ptracker_service_GardenerCreateRequest): com_github_ptracker_entity_Gardener
    createOtherEvent(input: Input_com_github_ptracker_service_OtherEventCreateRequest): com_github_ptracker_entity_OtherEvent
    createPlant(input: Input_com_github_ptracker_service_PlantCreateRequest): com_github_ptracker_entity_Plant
    createWateringEvent(input: Input_com_github_ptracker_service_WateringEventCreateRequest): com_github_ptracker_entity_WateringEvent
    deleteAccount(input: Input_com_github_ptracker_service_AccountDeleteRequest): com_github_ptracker_service_AccountDeleteResponse
    deleteFertilizationEvent(input: Input_com_github_ptracker_service_FertilizationEventDeleteRequest): com_github_ptracker_service_FertilizationEventDeleteResponse
    deleteGarden(input: Input_com_github_ptracker_service_GardenDeleteRequest): com_github_ptracker_service_GardenDeleteResponse
    deleteGardenPlant(input: Input_com_github_ptracker_service_GardenPlantDeleteRequest): com_github_ptracker_service_GardenPlantDeleteResponse
    deleteGardener(input: Input_com_github_ptracker_service_GardenerDeleteRequest): com_github_ptracker_service_GardenerDeleteResponse
    deleteOtherEvent(input: Input_com_github_ptracker_service_OtherEventDeleteRequest): com_github_ptracker_service_OtherEventDeleteResponse
    deletePlant(input: Input_com_github_ptracker_service_PlantDeleteRequest): com_github_ptracker_service_PlantDeleteResponse
    deleteWateringEvent(input: Input_com_github_ptracker_service_WateringEventDeleteRequest): com_github_ptracker_service_WateringEventDeleteResponse
    updateAccount(input: Input_com_github_ptracker_service_AccountUpdateRequest): com_github_ptracker_entity_Account
    updateFertilizationEvent(input: Input_com_github_ptracker_service_FertilizationEventUpdateRequest): com_github_ptracker_entity_FertilizationEvent
    updateGarden(input: Input_com_github_ptracker_service_GardenUpdateRequest): com_github_ptracker_entity_Garden
    updateGardenPlant(input: Input_com_github_ptracker_service_GardenPlantUpdateRequest): com_github_ptracker_entity_GardenPlant
    updateGardener(input: Input_com_github_ptracker_service_GardenerUpdateRequest): com_github_ptracker_entity_Gardener
    updateOtherEvent(input: Input_com_github_ptracker_service_OtherEventUpdateRequest): com_github_ptracker_entity_OtherEvent
    updatePlant(input: Input_com_github_ptracker_service_PlantUpdateRequest): com_github_ptracker_entity_Plant
    updateWateringEvent(input: Input_com_github_ptracker_service_WateringEventUpdateRequest): com_github_ptracker_entity_WateringEvent
}

type QueryType {
    getAccount(input: Input_com_github_ptracker_service_AccountGetRequest): com_github_ptracker_entity_Account
    getFertilizationEvent(input: Input_com_github_ptracker_service_FertilizationEventGetRequest): com_github_ptracker_entity_FertilizationEvent
    getGarden(input: Input_com_github_ptracker_service_GardenGetRequest): com_github_ptracker_entity_Garden
    getGardenPlant(input: Input_com_github_ptracker_service_GardenPlantGetRequest): com_github_ptracker_entity_GardenPlant
    getGardener(input: Input_com_github_ptracker_service_GardenerGetRequest): com_github_ptracker_entity_Gardener
    getOtherEvent(input: Input_com_github_ptracker_service_OtherEventGetRequest): com_github_ptracker_entity_OtherEvent
    getPlant(input: Input_com_github_ptracker_service_PlantGetRequest): com_github_ptracker_entity_Plant
    getWateringEvent(input: Input_com_github_ptracker_service_WateringEventGetRequest): com_github_ptracker_entity_WateringEvent
}

type com_github_ptracker_common_EventMetadata {
    comment: String
    gardener: com_github_ptracker_entity_Gardener
    gardenerid: String
    timestamp: Long
}

type com_github_ptracker_entity_Account {
    gardens: [com_github_ptracker_entity_Garden]
    id: String
    name: String
}

type com_github_ptracker_entity_FertilizationEvent {
    gardenPlant: com_github_ptracker_entity_GardenPlant
    gardenplantid: String
    id: String
    metadata: com_github_ptracker_common_EventMetadata
    quantitymg: Int
}

type com_github_ptracker_entity_Garden {
    account: com_github_ptracker_entity_Account
    accountid: String
    gardenPlants: [com_github_ptracker_entity_GardenPlant]
    id: String
    name: String
}

type com_github_ptracker_entity_GardenPlant {
    fertilizationEvents: [com_github_ptracker_entity_FertilizationEvent]
    garden: com_github_ptracker_entity_Garden
    gardenid: String
    id: String
    name: String
    otherEvents: [com_github_ptracker_entity_OtherEvent]
    plant: com_github_ptracker_entity_Plant
    plantid: String
    wateringEvents: [com_github_ptracker_entity_WateringEvent]
}

type com_github_ptracker_entity_Gardener {
    fertilizationEvents: [com_github_ptracker_entity_FertilizationEvent]
    firstname: String
    id: String
    lastname: String
    otherGardenPlantEvents: [com_github_ptracker_entity_OtherEvent]
    wateringEvents: [com_github_ptracker_entity_WateringEvent]
}

type com_github_ptracker_entity_OtherEvent {
    description: String
    gardenPlant: com_github_ptracker_entity_GardenPlant
    gardenplantid: String
    id: String
    metadata: com_github_ptracker_common_EventMetadata
}

type com_github_ptracker_entity_Plant {
    gardenPlants: [com_github_ptracker_entity_GardenPlant]
    id: String
    name: String
}

type com_github_ptracker_entity_WateringEvent {
    gardenPlant: com_github_ptracker_entity_GardenPlant
    gardenplantid: String
    id: String
    metadata: com_github_ptracker_common_EventMetadata
    quantityml: Int
}

type com_github_ptracker_service_AccountCreateRequest {
    account: com_github_ptracker_entity_Account
}

type com_github_ptracker_service_AccountCreateResponse {
    _: String
}

type com_github_ptracker_service_AccountDeleteRequest {
    id: String
}

type com_github_ptracker_service_AccountDeleteResponse {
    _: String
}

type com_github_ptracker_service_AccountGetRequest {
    id: String
}

type com_github_ptracker_service_AccountGetResponse {
    account: com_github_ptracker_entity_Account
}

type com_github_ptracker_service_AccountQueryRequest {
    template: com_github_ptracker_entity_Account
}

type com_github_ptracker_service_AccountQueryResponse {
    account: [com_github_ptracker_entity_Account]
}

type com_github_ptracker_service_AccountUpdateRequest {
    account: com_github_ptracker_entity_Account
    shouldupsert: Boolean
}

type com_github_ptracker_service_AccountUpdateResponse {
    _: String
}

type com_github_ptracker_service_FertilizationEventCreateRequest {
    fertilizationevent: com_github_ptracker_entity_FertilizationEvent
}

type com_github_ptracker_service_FertilizationEventCreateResponse {
    _: String
}

type com_github_ptracker_service_FertilizationEventDeleteRequest {
    id: String
}

type com_github_ptracker_service_FertilizationEventDeleteResponse {
    _: String
}

type com_github_ptracker_service_FertilizationEventGetRequest {
    id: String
}

type com_github_ptracker_service_FertilizationEventGetResponse {
    fertilizationevent: com_github_ptracker_entity_FertilizationEvent
}

type com_github_ptracker_service_FertilizationEventQueryRequest {
    template: com_github_ptracker_entity_FertilizationEvent
}

type com_github_ptracker_service_FertilizationEventQueryResponse {
    fertilizationevent: [com_github_ptracker_entity_FertilizationEvent]
}

type com_github_ptracker_service_FertilizationEventUpdateRequest {
    fertilizationevent: com_github_ptracker_entity_FertilizationEvent
    shouldupsert: Boolean
}

type com_github_ptracker_service_FertilizationEventUpdateResponse {
    _: String
}

type com_github_ptracker_service_GardenCreateRequest {
    garden: com_github_ptracker_entity_Garden
}

type com_github_ptracker_service_GardenCreateResponse {
    _: String
}

type com_github_ptracker_service_GardenDeleteRequest {
    id: String
}

type com_github_ptracker_service_GardenDeleteResponse {
    _: String
}

type com_github_ptracker_service_GardenGetRequest {
    id: String
}

type com_github_ptracker_service_GardenGetResponse {
    garden: com_github_ptracker_entity_Garden
}

type com_github_ptracker_service_GardenPlantCreateRequest {
    gardenplant: com_github_ptracker_entity_GardenPlant
}

type com_github_ptracker_service_GardenPlantCreateResponse {
    _: String
}

type com_github_ptracker_service_GardenPlantDeleteRequest {
    id: String
}

type com_github_ptracker_service_GardenPlantDeleteResponse {
    _: String
}

type com_github_ptracker_service_GardenPlantGetRequest {
    id: String
}

type com_github_ptracker_service_GardenPlantGetResponse {
    gardenplant: com_github_ptracker_entity_GardenPlant
}

type com_github_ptracker_service_GardenPlantQueryRequest {
    template: com_github_ptracker_entity_GardenPlant
}

type com_github_ptracker_service_GardenPlantQueryResponse {
    gardenplant: [com_github_ptracker_entity_GardenPlant]
}

type com_github_ptracker_service_GardenPlantUpdateRequest {
    gardenplant: com_github_ptracker_entity_GardenPlant
    shouldupsert: Boolean
}

type com_github_ptracker_service_GardenPlantUpdateResponse {
    _: String
}

type com_github_ptracker_service_GardenQueryRequest {
    template: com_github_ptracker_entity_Garden
}

type com_github_ptracker_service_GardenQueryResponse {
    garden: [com_github_ptracker_entity_Garden]
}

type com_github_ptracker_service_GardenUpdateRequest {
    garden: com_github_ptracker_entity_Garden
    shouldupsert: Boolean
}

type com_github_ptracker_service_GardenUpdateResponse {
    _: String
}

type com_github_ptracker_service_GardenerCreateRequest {
    gardener: com_github_ptracker_entity_Gardener
}

type com_github_ptracker_service_GardenerCreateResponse {
    _: String
}

type com_github_ptracker_service_GardenerDeleteRequest {
    id: String
}

type com_github_ptracker_service_GardenerDeleteResponse {
    _: String
}

type com_github_ptracker_service_GardenerGetRequest {
    id: String
}

type com_github_ptracker_service_GardenerGetResponse {
    gardener: com_github_ptracker_entity_Gardener
}

type com_github_ptracker_service_GardenerQueryRequest {
    template: com_github_ptracker_entity_Gardener
}

type com_github_ptracker_service_GardenerQueryResponse {
    gardener: [com_github_ptracker_entity_Gardener]
}

type com_github_ptracker_service_GardenerUpdateRequest {
    gardener: com_github_ptracker_entity_Gardener
    shouldupsert: Boolean
}

type com_github_ptracker_service_GardenerUpdateResponse {
    _: String
}

type com_github_ptracker_service_OtherEventCreateRequest {
    otherevent: com_github_ptracker_entity_OtherEvent
}

type com_github_ptracker_service_OtherEventCreateResponse {
    _: String
}

type com_github_ptracker_service_OtherEventDeleteRequest {
    id: String
}

type com_github_ptracker_service_OtherEventDeleteResponse {
    _: String
}

type com_github_ptracker_service_OtherEventGetRequest {
    id: String
}

type com_github_ptracker_service_OtherEventGetResponse {
    otherevent: com_github_ptracker_entity_OtherEvent
}

type com_github_ptracker_service_OtherEventQueryRequest {
    template: com_github_ptracker_entity_OtherEvent
}

type com_github_ptracker_service_OtherEventQueryResponse {
    otherevent: [com_github_ptracker_entity_OtherEvent]
}

type com_github_ptracker_service_OtherEventUpdateRequest {
    otherevent: com_github_ptracker_entity_OtherEvent
    shouldupsert: Boolean
}

type com_github_ptracker_service_OtherEventUpdateResponse {
    _: String
}

type com_github_ptracker_service_PlantCreateRequest {
    plant: com_github_ptracker_entity_Plant
}

type com_github_ptracker_service_PlantCreateResponse {
    _: String
}

type com_github_ptracker_service_PlantDeleteRequest {
    id: String
}

type com_github_ptracker_service_PlantDeleteResponse {
    _: String
}

type com_github_ptracker_service_PlantGetRequest {
    id: String
}

type com_github_ptracker_service_PlantGetResponse {
    plant: com_github_ptracker_entity_Plant
}

type com_github_ptracker_service_PlantQueryRequest {
    template: com_github_ptracker_entity_Plant
}

type com_github_ptracker_service_PlantQueryResponse {
    plant: [com_github_ptracker_entity_Plant]
}

type com_github_ptracker_service_PlantUpdateRequest {
    plant: com_github_ptracker_entity_Plant
    shouldupsert: Boolean
}

type com_github_ptracker_service_PlantUpdateResponse {
    _: String
}

type com_github_ptracker_service_WateringEventCreateRequest {
    wateringevent: com_github_ptracker_entity_WateringEvent
}

type com_github_ptracker_service_WateringEventCreateResponse {
    _: String
}

type com_github_ptracker_service_WateringEventDeleteRequest {
    id: String
}

type com_github_ptracker_service_WateringEventDeleteResponse {
    _: String
}

type com_github_ptracker_service_WateringEventGetRequest {
    id: String
}

type com_github_ptracker_service_WateringEventGetResponse {
    wateringevent: com_github_ptracker_entity_WateringEvent
}

type com_github_ptracker_service_WateringEventQueryRequest {
    template: com_github_ptracker_entity_WateringEvent
}

type com_github_ptracker_service_WateringEventQueryResponse {
    wateringevent: [com_github_ptracker_entity_WateringEvent]
}

type com_github_ptracker_service_WateringEventUpdateRequest {
    shouldupsert: Boolean
    wateringevent: com_github_ptracker_entity_WateringEvent
}

type com_github_ptracker_service_WateringEventUpdateResponse {
    _: String
}

input Input_com_github_ptracker_common_EventMetadata {
    comment: String
    gardenerId: String
    timestamp: Long
}

input Input_com_github_ptracker_entity_Account {
    id: String
    name: String
}

input Input_com_github_ptracker_entity_FertilizationEvent {
    gardenPlantId: String
    id: String
    metadata: Input_com_github_ptracker_common_EventMetadata
    quantityMg: Int
}

input Input_com_github_ptracker_entity_Garden {
    accountId: String
    id: String
    name: String
}

input Input_com_github_ptracker_entity_GardenPlant {
    gardenId: String
    id: String
    name: String
    plantId: String
}

input Input_com_github_ptracker_entity_Gardener {
    firstName: String
    id: String
    lastName: String
}

input Input_com_github_ptracker_entity_OtherEvent {
    description: String
    gardenPlantId: String
    id: String
    metadata: Input_com_github_ptracker_common_EventMetadata
}

input Input_com_github_ptracker_entity_Plant {
    id: String
    name: String
}

input Input_com_github_ptracker_entity_WateringEvent {
    gardenPlantId: String
    id: String
    metadata: Input_com_github_ptracker_common_EventMetadata
    quantityMl: Int
}

input Input_com_github_ptracker_service_AccountCreateRequest {
    account: Input_com_github_ptracker_entity_Account
}

input Input_com_github_ptracker_service_AccountCreateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_AccountDeleteRequest {
    id: String
}

input Input_com_github_ptracker_service_AccountDeleteResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_AccountGetRequest {
    id: String
}

input Input_com_github_ptracker_service_AccountGetResponse {
    account: Input_com_github_ptracker_entity_Account
}

input Input_com_github_ptracker_service_AccountQueryRequest {
    template: Input_com_github_ptracker_entity_Account
}

input Input_com_github_ptracker_service_AccountQueryResponse {
    account: [Input_com_github_ptracker_entity_Account]
}

input Input_com_github_ptracker_service_AccountUpdateRequest {
    account: Input_com_github_ptracker_entity_Account
    shouldUpsert: Boolean
}

input Input_com_github_ptracker_service_AccountUpdateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_FertilizationEventCreateRequest {
    fertilizationEvent: Input_com_github_ptracker_entity_FertilizationEvent
}

input Input_com_github_ptracker_service_FertilizationEventCreateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_FertilizationEventDeleteRequest {
    id: String
}

input Input_com_github_ptracker_service_FertilizationEventDeleteResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_FertilizationEventGetRequest {
    id: String
}

input Input_com_github_ptracker_service_FertilizationEventGetResponse {
    fertilizationEvent: Input_com_github_ptracker_entity_FertilizationEvent
}

input Input_com_github_ptracker_service_FertilizationEventQueryRequest {
    template: Input_com_github_ptracker_entity_FertilizationEvent
}

input Input_com_github_ptracker_service_FertilizationEventQueryResponse {
    fertilizationEvent: [Input_com_github_ptracker_entity_FertilizationEvent]
}

input Input_com_github_ptracker_service_FertilizationEventUpdateRequest {
    fertilizationEvent: Input_com_github_ptracker_entity_FertilizationEvent
    shouldUpsert: Boolean
}

input Input_com_github_ptracker_service_FertilizationEventUpdateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_GardenCreateRequest {
    garden: Input_com_github_ptracker_entity_Garden
}

input Input_com_github_ptracker_service_GardenCreateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_GardenDeleteRequest {
    id: String
}

input Input_com_github_ptracker_service_GardenDeleteResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_GardenGetRequest {
    id: String
}

input Input_com_github_ptracker_service_GardenGetResponse {
    garden: Input_com_github_ptracker_entity_Garden
}

input Input_com_github_ptracker_service_GardenPlantCreateRequest {
    gardenPlant: Input_com_github_ptracker_entity_GardenPlant
}

input Input_com_github_ptracker_service_GardenPlantCreateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_GardenPlantDeleteRequest {
    id: String
}

input Input_com_github_ptracker_service_GardenPlantDeleteResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_GardenPlantGetRequest {
    id: String
}

input Input_com_github_ptracker_service_GardenPlantGetResponse {
    gardenPlant: Input_com_github_ptracker_entity_GardenPlant
}

input Input_com_github_ptracker_service_GardenPlantQueryRequest {
    template: Input_com_github_ptracker_entity_GardenPlant
}

input Input_com_github_ptracker_service_GardenPlantQueryResponse {
    gardenPlant: [Input_com_github_ptracker_entity_GardenPlant]
}

input Input_com_github_ptracker_service_GardenPlantUpdateRequest {
    gardenPlant: Input_com_github_ptracker_entity_GardenPlant
    shouldUpsert: Boolean
}

input Input_com_github_ptracker_service_GardenPlantUpdateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_GardenQueryRequest {
    template: Input_com_github_ptracker_entity_Garden
}

input Input_com_github_ptracker_service_GardenQueryResponse {
    garden: [Input_com_github_ptracker_entity_Garden]
}

input Input_com_github_ptracker_service_GardenUpdateRequest {
    garden: Input_com_github_ptracker_entity_Garden
    shouldUpsert: Boolean
}

input Input_com_github_ptracker_service_GardenUpdateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_GardenerCreateRequest {
    gardener: Input_com_github_ptracker_entity_Gardener
}

input Input_com_github_ptracker_service_GardenerCreateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_GardenerDeleteRequest {
    id: String
}

input Input_com_github_ptracker_service_GardenerDeleteResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_GardenerGetRequest {
    id: String
}

input Input_com_github_ptracker_service_GardenerGetResponse {
    gardener: Input_com_github_ptracker_entity_Gardener
}

input Input_com_github_ptracker_service_GardenerQueryRequest {
    template: Input_com_github_ptracker_entity_Gardener
}

input Input_com_github_ptracker_service_GardenerQueryResponse {
    gardener: [Input_com_github_ptracker_entity_Gardener]
}

input Input_com_github_ptracker_service_GardenerUpdateRequest {
    gardener: Input_com_github_ptracker_entity_Gardener
    shouldUpsert: Boolean
}

input Input_com_github_ptracker_service_GardenerUpdateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_OtherEventCreateRequest {
    otherEvent: Input_com_github_ptracker_entity_OtherEvent
}

input Input_com_github_ptracker_service_OtherEventCreateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_OtherEventDeleteRequest {
    id: String
}

input Input_com_github_ptracker_service_OtherEventDeleteResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_OtherEventGetRequest {
    id: String
}

input Input_com_github_ptracker_service_OtherEventGetResponse {
    otherEvent: Input_com_github_ptracker_entity_OtherEvent
}

input Input_com_github_ptracker_service_OtherEventQueryRequest {
    template: Input_com_github_ptracker_entity_OtherEvent
}

input Input_com_github_ptracker_service_OtherEventQueryResponse {
    otherEvent: [Input_com_github_ptracker_entity_OtherEvent]
}

input Input_com_github_ptracker_service_OtherEventUpdateRequest {
    otherEvent: Input_com_github_ptracker_entity_OtherEvent
    shouldUpsert: Boolean
}

input Input_com_github_ptracker_service_OtherEventUpdateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_PlantCreateRequest {
    plant: Input_com_github_ptracker_entity_Plant
}

input Input_com_github_ptracker_service_PlantCreateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_PlantDeleteRequest {
    id: String
}

input Input_com_github_ptracker_service_PlantDeleteResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_PlantGetRequest {
    id: String
}

input Input_com_github_ptracker_service_PlantGetResponse {
    plant: Input_com_github_ptracker_entity_Plant
}

input Input_com_github_ptracker_service_PlantQueryRequest {
    template: Input_com_github_ptracker_entity_Plant
}

input Input_com_github_ptracker_service_PlantQueryResponse {
    plant: [Input_com_github_ptracker_entity_Plant]
}

input Input_com_github_ptracker_service_PlantUpdateRequest {
    plant: Input_com_github_ptracker_entity_Plant
    shouldUpsert: Boolean
}

input Input_com_github_ptracker_service_PlantUpdateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_WateringEventCreateRequest {
    wateringEvent: Input_com_github_ptracker_entity_WateringEvent
}

input Input_com_github_ptracker_service_WateringEventCreateResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_WateringEventDeleteRequest {
    id: String
}

input Input_com_github_ptracker_service_WateringEventDeleteResponse {
    "NOT USED"
    _: String = ""
}

input Input_com_github_ptracker_service_WateringEventGetRequest {
    id: String
}

input Input_com_github_ptracker_service_WateringEventGetResponse {
    wateringEvent: Input_com_github_ptracker_entity_WateringEvent
}

input Input_com_github_ptracker_service_WateringEventQueryRequest {
    template: Input_com_github_ptracker_entity_WateringEvent
}

input Input_com_github_ptracker_service_WateringEventQueryResponse {
    wateringEvent: [Input_com_github_ptracker_entity_WateringEvent]
}

input Input_com_github_ptracker_service_WateringEventUpdateRequest {
    shouldUpsert: Boolean
    wateringEvent: Input_com_github_ptracker_entity_WateringEvent
}

input Input_com_github_ptracker_service_WateringEventUpdateResponse {
    "NOT USED"
    _: String = ""
}


"Long type"
scalar Long